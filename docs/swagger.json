{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server ÖZINŞE.",
        "title": "ÖZINŞE API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "petstore.swagger.io",
    "basePath": "/v2",
    "paths": {
        "/": {
            "get": {
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Tests"
                ],
                "summary": "Giving Common page",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "500": {
                        "description": "Invalid file",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/hello": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tests"
                ],
                "summary": "Saying hello",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Invalid file",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/refresh": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer RefreshToken",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.TokensResponse"
                        }
                    },
                    "400": {
                        "description": "Couldn't find token",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Couldn't find user",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Couldn't create tokens",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/sign-in": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign In",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/views.SignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.TokensResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Incorrect email or password",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Email not found",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Couldn't create tokens",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/sign-out": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign Out",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer AccessToken",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Couldn't find token",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Couldn't create tokens",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/roles": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Get Roles List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer AccessToken",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Role"
                            }
                        }
                    },
                    "401": {
                        "description": "No token Middleware",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "No Permission",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found User Middleware",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Couldn't Get roles",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/roles/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Get Roles List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer AccessToken",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Role"
                        }
                    },
                    "401": {
                        "description": "No token Middleware",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "No Permission",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found User Middleware",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Couldn't Get roles",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/users": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get Users List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer AccessToken",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/views.User"
                            }
                        }
                    },
                    "401": {
                        "description": "No token Middleware",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "No Permission",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found User Middleware",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Couldn't Get users",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create user (Register)",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/views.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.ResponseId"
                        }
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Couldn't hash password",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/profile": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get User profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer AccessToken",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.User"
                        }
                    },
                    "401": {
                        "description": "No token Middleware",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found User Middleware",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Couldn't Get user",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer AccessToken",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "User data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/views.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "No token Middleware",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found User Middleware",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Couldn't update user data",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer AccessToken",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.ResponseId"
                        }
                    },
                    "401": {
                        "description": "No token Middleware",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found User Middleware",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Couldn't delete user",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer AccessToken",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.User"
                        }
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "No token Middleware",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "No Permission",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found User Middleware",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Couldn't get roles",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer AccessToken",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/views.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "No token Middleware",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "No Permission",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found User Middleware",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Couldn't update user data",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer AccessToken",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.ResponseId"
                        }
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "No token Middleware",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "No Permission",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found User Middleware",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Couldn't delete user",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "database.Role": {
            "type": "object",
            "properties": {
                "ageCategories": {
                    "type": "integer"
                },
                "genres": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "projects": {
                    "type": "integer"
                },
                "roles": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "types": {
                    "type": "integer"
                },
                "users": {
                    "type": "integer"
                }
            }
        },
        "views.CreateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "views.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "views.ResponseId": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "views.ResponseMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "views.Role": {
            "type": "object",
            "properties": {
                "age_categories": {
                    "type": "integer"
                },
                "genres": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "projects": {
                    "type": "integer"
                },
                "roles": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "types": {
                    "type": "integer"
                },
                "users": {
                    "type": "integer"
                }
            }
        },
        "views.SignInRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "views.TokensResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "views.UpdateProfileRequest": {
            "type": "object",
            "properties": {
                "date_of_birth": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "description": "Id          int64     `json:\"id\"`",
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "views.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "date_of_birth": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "description": "Id          int64     `json:\"id\"`",
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "views.User": {
            "type": "object",
            "properties": {
                "date_of_birth": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/views.Role"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}