// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Tests"
                ],
                "summary": "Giving Common page",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "500": {
                        "description": "Invalid file",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/hello": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tests"
                ],
                "summary": "Saying hello",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Invalid file",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/refresh": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.TokensResponse"
                        }
                    },
                    "400": {
                        "description": "Couldn't find token",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Couldn't find user",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Couldn't create tokens",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/sign-in": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign In",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/views.SignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.TokensResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Incorrect email or password",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Email not found",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Couldn't create tokens",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/sign-out": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign Out",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Couldn't find token",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Couldn't create tokens",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/users": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/views.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.ResponseId"
                        }
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Couldn't hash password",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.ResponseId"
                        }
                    },
                    "500": {
                        "description": "Couldn't delete user",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/profile": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/views.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Couldn't update user data",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "views.CreateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "views.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "views.ResponseId": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "views.ResponseMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "views.SignInRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "views.TokensResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "views.UpdateProfileRequest": {
            "type": "object",
            "properties": {
                "date_of_birth": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "petstore.swagger.io",
	BasePath:         "/v2",
	Schemes:          []string{},
	Title:            "ÖZINŞE API",
	Description:      "This is a sample server ÖZINŞE.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
