// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: watchlist.sql

package repositories

import (
	"context"
)

const addMovie2Watchlist = `-- name: AddMovie2Watchlist :exec
INSERT INTO watchlist(movie_id, added_at)
VALUES (?, NOW())
`

func (q *Queries) AddMovie2Watchlist(ctx context.Context, movieID int64) error {
	_, err := q.db.ExecContext(ctx, addMovie2Watchlist, movieID)
	return err
}

const deleteMovieFromWatchlist = `-- name: DeleteMovieFromWatchlist :exec

DELETE FROM watchlist WHERE movie_id = ?
`

func (q *Queries) DeleteMovieFromWatchlist(ctx context.Context, movieID int64) error {
	_, err := q.db.ExecContext(ctx, deleteMovieFromWatchlist, movieID)
	return err
}

const getWatchlistMovies = `-- name: GetWatchlistMovies :many

SELECT movie_id
FROM watchlist
ORDER BY added_at
`

func (q *Queries) GetWatchlistMovies(ctx context.Context) ([]int64, error) {
	rows, err := q.db.QueryContext(ctx, getWatchlistMovies)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []int64
	for rows.Next() {
		var movie_id int64
		if err := rows.Scan(&movie_id); err != nil {
			return nil, err
		}
		items = append(items, movie_id)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
